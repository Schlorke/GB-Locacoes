// üéØ GUIA ESSENCIAL DE CONFIGURA√á√ÉO - GB LOCA√á√ïES
// Apenas o que √© REALMENTE necess√°rio para o projeto funcionar

console.log("üèóÔ∏è GB LOCA√á√ïES - CONFIGURA√á√ÉO ESSENCIAL")
console.log("=====================================")

// ‚úÖ INTEGRA√á√ïES OBRIGAT√ìRIAS
console.log("\nüì¶ INTEGRA√á√ïES NECESS√ÅRIAS:")
console.log("‚úÖ Neon (PostgreSQL) - OBRIGAT√ìRIO")
console.log("‚úÖ Vercel Blob - OBRIGAT√ìRIO (upload de imagens)")
console.log("‚ùå Upstash Redis - OPCIONAL (cache, pode ser removido)")

// ‚úÖ VARI√ÅVEIS DE AMBIENTE ESSENCIAIS
console.log("\nüîß VARI√ÅVEIS DE AMBIENTE OBRIGAT√ìRIAS:")
const essentialVars = [
  "DATABASE_URL", // Neon PostgreSQL
  "NEXTAUTH_SECRET", // Autentica√ß√£o
  "NEXTAUTH_URL", // URL base da aplica√ß√£o
  "BLOB_READ_WRITE_TOKEN", // Upload de imagens
]

essentialVars.forEach((varName) => {
  const exists = process.env[varName] ? "‚úÖ" : "‚ùå"
  console.log(`${exists} ${varName}`)
})

// ‚ùå VARI√ÅVEIS DESNECESS√ÅRIAS (podem ser removidas)
console.log("\nüóëÔ∏è VARI√ÅVEIS DESNECESS√ÅRIAS:")
const unnecessaryVars = [
  "KV_REST_API_URL", // Redis n√£o usado
  "KV_REST_API_TOKEN", // Redis n√£o usado
  "UPSTASH_REDIS_REST_URL", // Redis n√£o usado
  "REDIS_URL", // Redis n√£o usado
  "STACK_SECRET_SERVER_KEY", // Stack Auth n√£o usado
  "NEXT_PUBLIC_STACK_PROJECT_ID", // Stack Auth n√£o usado
]

unnecessaryVars.forEach((varName) => {
  console.log(`‚ùå ${varName} - PODE SER REMOVIDA`)
})
