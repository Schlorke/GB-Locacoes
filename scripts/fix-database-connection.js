// Script para resolver conflitos de DATABASE_URL
async function fixDatabaseConnection() {
  console.log("üîß [FIX-DB] Resolvendo conflitos de conex√£o...")

  // Verificar todas as vari√°veis de ambiente relacionadas ao banco
  console.log("üìã Vari√°veis de ambiente atuais:")

  const dbVars = Object.keys(process.env).filter(
    (key) => key.includes("DATABASE") || key.includes("POSTGRES") || key.includes("NEON"),
  )

  dbVars.forEach((key) => {
    const value = process.env[key]
    console.log(`- ${key}: ${value ? value.substring(0, 30) + "..." : "N√ÉO DEFINIDA"}`)
  })

  // Tentar conectar com a URL atual
  if (process.env.DATABASE_URL) {
    console.log("\nüîå Testando conex√£o atual...")
    try {
      const { neon } = require("@neondatabase/serverless")
      const sql = neon(process.env.DATABASE_URL)

      const result = await sql`SELECT NOW() as current_time`
      console.log("‚úÖ Conex√£o funcionando! Hora do servidor:", result[0].current_time)

      // Verificar tabelas existentes
      const tables = await sql`
        SELECT table_name 
        FROM information_schema.tables 
        WHERE table_schema = 'public'
      `

      console.log("\nüìä Tabelas existentes:")
      tables.forEach((table) => {
        console.log(`  - ${table.table_name}`)
      })

      return true
    } catch (error) {
      console.error("‚ùå Erro na conex√£o:", error.message)
      return false
    }
  } else {
    console.log("‚ùå DATABASE_URL n√£o encontrada")
    return false
  }
}

fixDatabaseConnection()
