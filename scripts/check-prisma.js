#!/usr/bin/env node

/**
 * Script para verificar se o Prisma est√° funcionando corretamente
 * Executa antes dos testes e builds para garantir que n√£o h√° problemas
 */

import { execSync } from 'child_process'
import { existsSync } from 'fs'
import { join } from 'path'

console.log('üîç Verificando configura√ß√£o do Prisma...')

try {
  // Verificar se o schema existe
  const schemaPath = join(process.cwd(), 'prisma', 'schema.prisma')
  if (!existsSync(schemaPath)) {
    throw new Error('Schema do Prisma n√£o encontrado em prisma/schema.prisma')
  }
  console.log('‚úÖ Schema do Prisma encontrado')

  // Verificar se o cliente foi gerado
  const clientPath = join(
    process.cwd(),
    'node_modules',
    '.prisma',
    'client',
    'index.d.ts'
  )
  if (!existsSync(clientPath)) {
    console.log('‚ö†Ô∏è Cliente do Prisma n√£o encontrado, gerando...')
    execSync('npx prisma generate', { stdio: 'inherit' })
  } else {
    console.log('‚úÖ Cliente do Prisma encontrado')
  }

  // Verificar se o PrismaClient pode ser importado especificamente
  console.log('üß™ Testando importa√ß√£o espec√≠fica do PrismaClient...')

  // Criar um arquivo tempor√°rio para testar apenas o Prisma
  const testFile = `
import { PrismaClient } from '@prisma/client';
const prisma = new PrismaClient();
console.log('PrismaClient importado com sucesso');
  `

  const fs = await import('fs')
  const tempFile = join(process.cwd(), 'temp-prisma-test.ts')
  fs.writeFileSync(tempFile, testFile)

  try {
    execSync(`npx tsc --noEmit --skipLibCheck ${tempFile}`, { stdio: 'pipe' })
    console.log('‚úÖ Importa√ß√£o do PrismaClient funcionando')
  } catch (error) {
    // Se falhar, tentar gerar novamente
    console.log('‚ö†Ô∏è Tentando regenerar o cliente do Prisma...')
    execSync('npx prisma generate', { stdio: 'inherit' })
    execSync(`npx tsc --noEmit --skipLibCheck ${tempFile}`, { stdio: 'pipe' })
    console.log('‚úÖ Importa√ß√£o do PrismaClient funcionando ap√≥s regenera√ß√£o')
  } finally {
    // Limpar arquivo tempor√°rio
    if (existsSync(tempFile)) {
      fs.unlinkSync(tempFile)
    }
  }

  console.log('üéâ Verifica√ß√£o do Prisma conclu√≠da com sucesso!')
  process.exit(0)
} catch (error) {
  console.error('‚ùå Erro na verifica√ß√£o do Prisma:', error.message)
  process.exit(1)
}
