// üö® DIAGN√ìSTICO: BLOB_READ_WRITE_TOKEN AUSENTE
console.log("üîç VERIFICANDO CONFIGURA√á√ÉO DO BLOB STORAGE...")

async function checkBlobConfiguration() {
  console.log("\nüìã STATUS DAS VARI√ÅVEIS:")
  console.log("========================")

  const requiredVars = {
    DATABASE_URL: process.env.DATABASE_URL,
    NEXTAUTH_SECRET: process.env.NEXTAUTH_SECRET,
    NEXTAUTH_URL: process.env.NEXTAUTH_URL,
    BLOB_READ_WRITE_TOKEN: process.env.BLOB_READ_WRITE_TOKEN,
  }

  const missingVars = []

  for (const [key, value] of Object.entries(requiredVars)) {
    if (value) {
      console.log(`‚úÖ ${key}: Configurado`)
    } else {
      console.log(`‚ùå ${key}: AUSENTE`)
      missingVars.push(key)
    }
  }

  if (missingVars.length > 0) {
    console.log("\nüö® A√á√ÉO NECESS√ÅRIA:")
    console.log("===================")

    if (missingVars.includes("BLOB_READ_WRITE_TOKEN")) {
      console.log("üì∏ BLOB_READ_WRITE_TOKEN √© OBRIGAT√ìRIO para:")
      console.log("   ‚Ä¢ Upload de imagens dos equipamentos")
      console.log("   ‚Ä¢ Funcionamento do admin")
      console.log("   ‚Ä¢ Cadastro de novos equipamentos")
      console.log("\nüîß COMO CORRIGIR:")
      console.log("   1. V√° para vercel.com/dashboard")
      console.log("   2. Selecione seu projeto")
      console.log("   3. V√° em Settings > Environment Variables")
      console.log("   4. Adicione BLOB_READ_WRITE_TOKEN")
      console.log("   5. Cole o token do Vercel Blob")
    }

    if (missingVars.includes("NEXTAUTH_URL")) {
      console.log("\nüåê NEXTAUTH_URL tamb√©m est√° ausente!")
      console.log("   ‚Ä¢ Necess√°rio para autentica√ß√£o")
      console.log("   ‚Ä¢ Use: https://seu-dominio.vercel.app")
    }
  } else {
    console.log("\nüéâ TODAS AS VARI√ÅVEIS CONFIGURADAS!")
  }
}

checkBlobConfiguration()
