{
  "openapi": "3.0.0",
  "info": {
    "title": "GB-Loca√ß√µes API",
    "version": "1.0.0",
    "description": "API completa da plataforma GB-Loca√ß√µes para loca√ß√£o de equipamentos de constru√ß√£o civil.\n\n## Funcionalidades\n\n- üèóÔ∏è **Equipamentos**: Cat√°logo completo de equipamentos para loca√ß√£o\n- üìã **Categorias**: Organiza√ß√£o por tipos de equipamento\n- üí∞ **Or√ßamentos**: Sistema de solicita√ß√£o e gest√£o de or√ßamentos\n- üîê **Autentica√ß√£o**: Sistema de login com roles (ADMIN/CLIENT)\n- üì§ **Upload**: Sistema de upload de arquivos e imagens\n- üìß **Contato**: Formul√°rio de contato e comunica√ß√£o\n\n## Autentica√ß√£o\n\nA API utiliza JWT tokens via NextAuth.js. Para endpoints protegidos, inclua o token no header: `Authorization: Bearer <token>`\n\n### Roles Dispon√≠veis:\n- **ADMIN**: Acesso completo a todas as funcionalidades\n- **CLIENT**: Acesso limitado a funcionalidades p√∫blicas"
  },
  "servers": [
    {
      "url": "http://localhost:3000/api",
      "description": "Local development server"
    },
    {
      "url": "https://gblocacoes.vercel.app/api",
      "description": "Production server"
    }
  ],
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {},
    "responses": {
      "400": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Invalid request parameters"
                },
                "code": {
                  "type": "string",
                  "example": "400"
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Authentication required"
                },
                "code": {
                  "type": "string",
                  "example": "401"
                }
              }
            }
          }
        }
      },
      "403": {
        "description": "Forbidden",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Access denied"
                },
                "code": {
                  "type": "string",
                  "example": "403"
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Resource not found"
                },
                "code": {
                  "type": "string",
                  "example": "404"
                }
              }
            }
          }
        }
      },
      "409": {
        "description": "Conflict",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Resource already exists"
                },
                "code": {
                  "type": "string",
                  "example": "409"
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "An unexpected error occurred"
                },
                "code": {
                  "type": "string",
                  "example": "500"
                }
              }
            }
          }
        }
      }
    }
  },
  "paths": {
    "/admin/analytics": {
      "get": {
        "operationId": "get-admin-analytics",
        "summary": "@openapi\r",
        "description": "",
        "tags": ["Admin"],
        "parameters": [],
        "responses": {
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/admin/categories": {
      "get": {
        "operationId": "get-admin-categories",
        "summary": "GET /api/admin/categories - List all categories",
        "description": "",
        "tags": ["Admin"],
        "parameters": [],
        "responses": {
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "operationId": "post-admin-categories",
        "summary": "POST /api/admin/categories - Create new category",
        "description": "",
        "tags": ["Admin"],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          }
        },
        "responses": {
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/admin/dashboard": {
      "get": {
        "operationId": "get-admin-dashboard",
        "summary": "@openapi",
        "description": "",
        "tags": ["Admin"],
        "parameters": [],
        "responses": {
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/admin/equipments": {
      "get": {
        "operationId": "get-admin-equipments",
        "summary": "GET /api/admin/equipments - List all equipments with pagination and filtering",
        "description": "",
        "tags": ["Admin"],
        "parameters": [],
        "responses": {
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "operationId": "post-admin-equipments",
        "summary": "POST /api/admin/equipments - Create new equipment",
        "description": "",
        "tags": ["Admin"],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          }
        },
        "responses": {
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/admin/quotes": {
      "get": {
        "operationId": "get-admin-quotes",
        "summary": "@openapi",
        "description": "",
        "tags": ["Admin"],
        "parameters": [],
        "responses": {
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/admin/security": {
      "get": {
        "operationId": "get-admin-security",
        "summary": "@openapi\r",
        "description": "",
        "tags": ["Admin"],
        "parameters": [],
        "responses": {
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/admin/seed-admin": {
      "post": {
        "operationId": "post-admin-seed-admin",
        "summary": "",
        "description": "",
        "tags": ["Admin"],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          }
        },
        "responses": {
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "get": {
        "operationId": "get-admin-seed-admin",
        "summary": "GET method remains the same",
        "description": "",
        "tags": ["Admin"],
        "parameters": [],
        "responses": {
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/admin/categories/{id}": {
      "put": {
        "operationId": "put-admin-categories-{id}",
        "summary": "",
        "description": "",
        "tags": ["Admin"],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          }
        },
        "responses": {
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "operationId": "delete-admin-categories-{id}",
        "summary": "",
        "description": "",
        "tags": ["Admin"],
        "parameters": [],
        "responses": {
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/admin/equipments/{id}": {
      "get": {
        "operationId": "get-admin-equipments-{id}",
        "summary": "",
        "description": "",
        "tags": ["Admin"],
        "parameters": [],
        "responses": {
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "put": {
        "operationId": "put-admin-equipments-{id}",
        "summary": "",
        "description": "",
        "tags": ["Admin"],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          }
        },
        "responses": {
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "operationId": "delete-admin-equipments-{id}",
        "summary": "",
        "description": "",
        "tags": ["Admin"],
        "parameters": [],
        "responses": {
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/admin/quotes/{id}": {
      "get": {
        "operationId": "get-admin-quotes-{id}",
        "summary": "",
        "description": "",
        "tags": ["Admin"],
        "parameters": [],
        "responses": {
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "patch": {
        "operationId": "patch-admin-quotes-{id}",
        "summary": "",
        "description": "",
        "tags": ["Admin"],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          }
        },
        "responses": {
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "operationId": "delete-admin-quotes-{id}",
        "summary": "",
        "description": "",
        "tags": ["Admin"],
        "parameters": [],
        "responses": {
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/categories": {
      "get": {
        "operationId": "get-categories",
        "summary": "@openapi",
        "description": "",
        "tags": ["Categories"],
        "parameters": [],
        "responses": {
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/contact": {
      "post": {
        "operationId": "post-contact",
        "summary": "",
        "description": "",
        "tags": ["Contact"],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          }
        },
        "responses": {
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/equipments": {
      "get": {
        "operationId": "get-equipments",
        "summary": "@openapi",
        "description": "",
        "tags": ["Equipments"],
        "parameters": [],
        "responses": {
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/fix-storage": {
      "post": {
        "operationId": "post-fix-storage",
        "summary": "",
        "description": "",
        "tags": ["Fix-storage"],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          }
        },
        "responses": {
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/health": {
      "get": {
        "operationId": "get-health",
        "summary": "",
        "description": "",
        "tags": ["Health"],
        "parameters": [],
        "responses": {
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/quotes": {
      "post": {
        "operationId": "post-quotes",
        "summary": "@openapi",
        "description": "",
        "tags": ["Quotes"],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          }
        },
        "responses": {
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/supabase-setup": {
      "post": {
        "operationId": "post-supabase-setup",
        "summary": "",
        "description": "",
        "tags": ["Supabase-setup"],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          }
        },
        "responses": {
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "get": {
        "operationId": "get-supabase-setup",
        "summary": "",
        "description": "",
        "tags": ["Supabase-setup"],
        "parameters": [],
        "responses": {
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/test-login": {
      "post": {
        "operationId": "post-test-login",
        "summary": "",
        "description": "",
        "tags": ["Test-login"],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          }
        },
        "responses": {
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/upload": {
      "post": {
        "operationId": "post-upload",
        "summary": "",
        "description": "",
        "tags": ["Upload"],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          }
        },
        "responses": {
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    }
  }
}
