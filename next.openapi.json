{
  "openapi": "3.0.0",
  "info": {
    "title": "GB-Loca√ß√µes API",
    "version": "1.0.0",
    "description": "API completa da plataforma GB-Loca√ß√µes para loca√ß√£o de equipamentos de constru√ß√£o civil.\n\n## Funcionalidades\n\n- üèóÔ∏è **Equipamentos**: Cat√°logo completo de equipamentos para loca√ß√£o\n- üìã **Categorias**: Organiza√ß√£o por tipos de equipamento\n- üí∞ **Or√ßamentos**: Sistema de solicita√ß√£o e gest√£o de or√ßamentos\n- üîê **Autentica√ß√£o**: Sistema de login com roles (ADMIN/CLIENT)\n- üì§ **Upload**: Sistema de upload de arquivos e imagens\n- üìß **Contato**: Formul√°rio de contato e comunica√ß√£o\n\n## Autentica√ß√£o\n\nA API utiliza JWT tokens via NextAuth.js. Para endpoints protegidos, inclua o token no header: `Authorization: Bearer <token>`\n\n### Roles Dispon√≠veis:\n- **ADMIN**: Acesso completo a todas as funcionalidades\n- **CLIENT**: Acesso limitado a funcionalidades p√∫blicas"
  },
  "servers": [
    {
      "url": "http://localhost:3000/api",
      "description": "Local development server"
    },
    {
      "url": "https://locacoesgb.com.br/api",
      "description": "Production server"
    }
  ],
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "defaultResponseSet": "common",
  "responseSets": {
    "common": ["400", "500"],
    "auth": ["400", "401", "403", "500"],
    "public": ["400", "500"]
  },
  "errorConfig": {
    "template": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string",
          "example": "{{ERROR_MESSAGE}}"
        },
        "code": {
          "type": "string",
          "example": "{{ERROR_CODE}}"
        }
      }
    },
    "codes": {
      "400": {
        "description": "Bad Request",
        "variables": {
          "ERROR_MESSAGE": "Invalid request parameters",
          "ERROR_CODE": "BAD_REQUEST"
        }
      },
      "401": {
        "description": "Unauthorized",
        "variables": {
          "ERROR_MESSAGE": "Authentication required",
          "ERROR_CODE": "UNAUTHORIZED"
        }
      },
      "403": {
        "description": "Forbidden",
        "variables": {
          "ERROR_MESSAGE": "Access denied",
          "ERROR_CODE": "FORBIDDEN"
        }
      },
      "404": {
        "description": "Not Found",
        "variables": {
          "ERROR_MESSAGE": "Resource not found",
          "ERROR_CODE": "NOT_FOUND"
        }
      },
      "409": {
        "description": "Conflict",
        "variables": {
          "ERROR_MESSAGE": "Resource already exists",
          "ERROR_CODE": "CONFLICT"
        }
      },
      "500": {
        "description": "Internal Server Error",
        "variables": {
          "ERROR_MESSAGE": "An unexpected error occurred",
          "ERROR_CODE": "INTERNAL_ERROR"
        }
      }
    }
  },
  "apiDir": "./app/api",
  "schemaDir": "./app",
  "schemaType": "zod",
  "docsUrl": "api-docs",
  "ui": "swagger",
  "outputFile": "openapi.json",
  "includeOpenApiRoutes": false,
  "debug": false
}
