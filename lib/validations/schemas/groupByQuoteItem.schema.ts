/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any */
import type { Prisma } from '@prisma/client';
import * as z from 'zod';
import { QuoteItemWhereInputObjectSchema as QuoteItemWhereInputObjectSchema } from './objects/QuoteItemWhereInput.schema';
import { QuoteItemOrderByWithAggregationInputObjectSchema as QuoteItemOrderByWithAggregationInputObjectSchema } from './objects/QuoteItemOrderByWithAggregationInput.schema';
import { QuoteItemScalarWhereWithAggregatesInputObjectSchema as QuoteItemScalarWhereWithAggregatesInputObjectSchema } from './objects/QuoteItemScalarWhereWithAggregatesInput.schema';
import { QuoteItemScalarFieldEnumSchema } from './enums/QuoteItemScalarFieldEnum.schema';
import { QuoteItemCountAggregateInputObjectSchema as QuoteItemCountAggregateInputObjectSchema } from './objects/QuoteItemCountAggregateInput.schema';
import { QuoteItemMinAggregateInputObjectSchema as QuoteItemMinAggregateInputObjectSchema } from './objects/QuoteItemMinAggregateInput.schema';
import { QuoteItemMaxAggregateInputObjectSchema as QuoteItemMaxAggregateInputObjectSchema } from './objects/QuoteItemMaxAggregateInput.schema';
import { QuoteItemAvgAggregateInputObjectSchema as QuoteItemAvgAggregateInputObjectSchema } from './objects/QuoteItemAvgAggregateInput.schema';
import { QuoteItemSumAggregateInputObjectSchema as QuoteItemSumAggregateInputObjectSchema } from './objects/QuoteItemSumAggregateInput.schema';

export const QuoteItemGroupBySchema: z.ZodType<Prisma.QuoteItemGroupByArgs> = z.object({ where: QuoteItemWhereInputObjectSchema.optional(), orderBy: z.union([QuoteItemOrderByWithAggregationInputObjectSchema, QuoteItemOrderByWithAggregationInputObjectSchema.array()]).optional(), having: QuoteItemScalarWhereWithAggregatesInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), by: z.array(QuoteItemScalarFieldEnumSchema), _count: z.union([ z.literal(true), QuoteItemCountAggregateInputObjectSchema ]).optional(), _min: QuoteItemMinAggregateInputObjectSchema.optional(), _max: QuoteItemMaxAggregateInputObjectSchema.optional(), _avg: QuoteItemAvgAggregateInputObjectSchema.optional(), _sum: QuoteItemSumAggregateInputObjectSchema.optional() }).strict() as unknown as z.ZodType<Prisma.QuoteItemGroupByArgs>;

export const QuoteItemGroupByZodSchema = z.object({ where: QuoteItemWhereInputObjectSchema.optional(), orderBy: z.union([QuoteItemOrderByWithAggregationInputObjectSchema, QuoteItemOrderByWithAggregationInputObjectSchema.array()]).optional(), having: QuoteItemScalarWhereWithAggregatesInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), by: z.array(QuoteItemScalarFieldEnumSchema), _count: z.union([ z.literal(true), QuoteItemCountAggregateInputObjectSchema ]).optional(), _min: QuoteItemMinAggregateInputObjectSchema.optional(), _max: QuoteItemMaxAggregateInputObjectSchema.optional(), _avg: QuoteItemAvgAggregateInputObjectSchema.optional(), _sum: QuoteItemSumAggregateInputObjectSchema.optional() }).strict();